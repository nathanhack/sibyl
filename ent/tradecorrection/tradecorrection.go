// Code generated by ent, DO NOT EDIT.

package tradecorrection

const (
	// Label holds the string label denoting the tradecorrection type in the database.
	Label = "trade_correction"
	// FieldID holds the string denoting the id field in the database.
	FieldID = "id"
	// FieldCorrection holds the string denoting the correction field in the database.
	FieldCorrection = "correction"
	// EdgeRecord holds the string denoting the record edge name in mutations.
	EdgeRecord = "record"
	// Table holds the table name of the tradecorrection in the database.
	Table = "trade_corrections"
	// RecordTable is the table that holds the record relation/edge. The primary key declared below.
	RecordTable = "trade_record_correction"
	// RecordInverseTable is the table name for the TradeRecord entity.
	// It exists in this package in order to avoid circular dependency with the "traderecord" package.
	RecordInverseTable = "trade_records"
)

// Columns holds all SQL columns for tradecorrection fields.
var Columns = []string{
	FieldID,
	FieldCorrection,
}

var (
	// RecordPrimaryKey and RecordColumn2 are the table columns denoting the
	// primary key for the record relation (M2M).
	RecordPrimaryKey = []string{"trade_record_id", "trade_correction_id"}
)

// ValidColumn reports if the column name is valid (part of the table columns).
func ValidColumn(column string) bool {
	for i := range Columns {
		if column == Columns[i] {
			return true
		}
	}
	return false
}
