// Code generated by ent, DO NOT EDIT.

package split

const (
	// Label holds the string label denoting the split type in the database.
	Label = "split"
	// FieldID holds the string denoting the id field in the database.
	FieldID = "id"
	// FieldExecutionDate holds the string denoting the execution_date field in the database.
	FieldExecutionDate = "execution_date"
	// FieldFrom holds the string denoting the from field in the database.
	FieldFrom = "from"
	// FieldTo holds the string denoting the to field in the database.
	FieldTo = "to"
	// EdgeStock holds the string denoting the stock edge name in mutations.
	EdgeStock = "stock"
	// Table holds the table name of the split in the database.
	Table = "splits"
	// StockTable is the table that holds the stock relation/edge.
	StockTable = "splits"
	// StockInverseTable is the table name for the Entity entity.
	// It exists in this package in order to avoid circular dependency with the "entity" package.
	StockInverseTable = "entities"
	// StockColumn is the table column denoting the stock relation/edge.
	StockColumn = "entity_splits"
)

// Columns holds all SQL columns for split fields.
var Columns = []string{
	FieldID,
	FieldExecutionDate,
	FieldFrom,
	FieldTo,
}

// ForeignKeys holds the SQL foreign-keys that are owned by the "splits"
// table and are not defined as standalone fields in the schema.
var ForeignKeys = []string{
	"entity_splits",
}

// ValidColumn reports if the column name is valid (part of the table columns).
func ValidColumn(column string) bool {
	for i := range Columns {
		if column == Columns[i] {
			return true
		}
	}
	for i := range ForeignKeys {
		if column == ForeignKeys[i] {
			return true
		}
	}
	return false
}
